name: Ambros Android CI Prod

on:
  workflow_dispatch:
  repository_dispatch:
    types: [android_ci_prod]
  # push:
  #   branches:
  #     - main

concurrency: 
  group: android-build-prod
  cancel-in-progress: true

env:
  LANG: en_US.UTF-8
  
jobs:
  clone-and-build:
    runs-on: ubuntu-20.04
    environment: main
    env:
      AMBROS_MOBILE_SSH_PRIVATE_KEY: ${{ secrets.AMBROS_MOBILE_SSH_PRIVATE_KEY }}
      AMBROS_MOBILES_KEYS_SSH_PRIVATE_KEY: ${{ secrets.AMBROS_MOBILES_KEYS_SSH_PRIVATE_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get configuration items
        env:
          MOBILE_KEYS_SSH_PRIVATEKEY: ${{ secrets.MOBILE_KEYS_SSH_PRIVATEKEY }}
          AMBROS_MOBILE_KEY_PASSPHRASE: ${{ secrets.AMBROS_MOBILE_KEY_PASSPHRASE }}

        run: |
          echo "Home: " $HOME

          echo $AMBROS_MOBILE_SSH_PRIVATE_KEY | base64 --decode > AMBROS_MOBILE_SSH_PRIVATE_KEY.key
          chmod 600 AMBROS_MOBILE_SSH_PRIVATE_KEY.key

          echo $AMBROS_MOBILES_KEYS_SSH_PRIVATE_KEY | base64 --decode > AMBROS_MOBILES_KEYS_SSH_PRIVATE_KEY.key
          chmod 600 AMBROS_MOBILES_KEYS_SSH_PRIVATE_KEY.key


          ls -al
          rm -rf $HOME/ambros_mobile

          AMBROX_MOBILE_BRANCH="main"
          GIT_SSH_COMMAND='ssh -i AMBROS_MOBILE_SSH_PRIVATE_KEY.key -o IdentitiesOnly=yes -o StrictHostKeyChecking=no' git clone -b $AMBROX_MOBILE_BRANCH git@github.com:Ambros-Technology/ambros_mobile.git $HOME/ambros_mobile

          
          rm -rf $HOME/ambros_mobiles_keys

          GIT_SSH_COMMAND='ssh -i AMBROS_MOBILES_KEYS_SSH_PRIVATE_KEY.key -o IdentitiesOnly=yes -o StrictHostKeyChecking=no' git clone git@github.com:Ambros-Technology/ambros_mobiles_keys.git $HOME/ambros_mobiles_keys
          
          CONFIG_PATH=$HOME/ambros_mobiles_keys
          
          echo $CONFIG_PATH

          echo "Using gpg to decrypt sensitive files now"
          gpg --quiet --batch --yes --decrypt --passphrase=$AMBROS_MOBILE_KEY_PASSPHRASE $CONFIG_PATH/sentry.android.properties.gpg > $CONFIG_PATH/sentry.android.properties
          gpg --batch --batch --yes --decrypt --passphrase=$AMBROS_MOBILE_KEY_PASSPHRASE $CONFIG_PATH/sentry.ios.properties.gpg > $CONFIG_PATH/sentry.ios.properties
          gpg --batch --batch --yes --decrypt --passphrase=$AMBROS_MOBILE_KEY_PASSPHRASE $CONFIG_PATH/.env.android.gpg > $CONFIG_PATH/.env.android 
          gpg --batch --batch --yes --decrypt --passphrase=$AMBROS_MOBILE_KEY_PASSPHRASE $CONFIG_PATH/ios/code-push.xcconfig.gpg > $CONFIG_PATH/ios/code-push.xcconfig
          gpg --batch --batch --yes --decrypt --passphrase=$AMBROS_MOBILE_KEY_PASSPHRASE $CONFIG_PATH/ios/fastlane/.env.ios.gpg > $CONFIG_PATH/ios/fastlane/.env.ios
          gpg --batch --batch --yes --decrypt --passphrase=$AMBROS_MOBILE_KEY_PASSPHRASE $CONFIG_PATH/android/fastlane/.env.android.gpg > $CONFIG_PATH/android/fastlane/.env.android 
          gpg --batch --batch --yes --decrypt --passphrase=$AMBROS_MOBILE_KEY_PASSPHRASE $CONFIG_PATH/keys/android-keys/ambros-portal-dev.jks.gpg > $CONFIG_PATH/keys/android-keys/ambros-portal-dev.jks
          gpg --batch --batch --yes --decrypt --passphrase=$AMBROS_MOBILE_KEY_PASSPHRASE $CONFIG_PATH/keys/android-keys/ambros-portal-prod.jks.gpg > $CONFIG_PATH/keys/android-keys/ambros-portal-prod.jks
          
          # 3. Copy file .env.android, sentry.android.properties to folder of  project ambros_mobile
          cp $CONFIG_PATH/sentry.android.properties $HOME/ambros_mobile/sentry.android.properties
          cp $CONFIG_PATH/.env.android $HOME/ambros_mobile/.env.android
          
          # 4. Copy file android/fastlane/.env.android to folder android/fastlane of project ambros_mobile
          cp $CONFIG_PATH/android/fastlane/.env.android $HOME/ambros_mobile/android/fastlane/.env.android

      - name: Setup Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11 

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Yarn setup
        run: yarn setup
        working-directory: /home/runner/ambros_mobile

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true

      - name: Install Fastlane
        run: gem install fastlane
        working-directory: /home/runner/ambros_mobile

      - name: Setup cache
        uses: actions/cache@v1
        with:
          path: Pods
          key: ${{ runner.os }}-android-build-cache
          restore-keys: |
            ${{ runner.os }}-android-build-cache

      - name: Fastlane action
        uses: maierj/fastlane-action@v2.3.0
        env:

          AMBROS_PORTAL_ANDROID_CODE_PUSH_KEY_DEV: "null"
          AMBROS_PORTAL_ANDROID_KEY_PATH_DEV: "null"
          AMBROS_PORTAL_ANDROID_STORE_PASSWORD_DEV: "null"
          AMBROS_PORTAL_ANDROID_KEY_PASSWORD_DEV: "null"
          
          APP_CENTER_API_TOKEN_DEV: "null"

          APP_CENTER_API_TOKEN_PROD: ${{ secrets.APP_CENTER_API_TOKEN_PROD }}

          AMBROS_PORTAL_ANDROID_CODE_PUSH_KEY_TEST: "null"
          AMBROS_PORTAL_ANDROID_CODE_PUSH_KEY_STAGING: "null"
          
          AMBROS_PORTAL_ANDROID_CODE_PUSH_KEY_PROD: ${{ secrets.AMBROS_PORTAL_ANDROID_CODE_PUSH_KEY_PROD }}
          AMBROS_PORTAL_ANDROID_KEY_PATH_PROD: "/home/runner/ambros_mobiles_keys/keys/android-keys/ambros-portal-prod.jks"
          AMBROS_PORTAL_ANDROID_STORE_PASSWORD_PROD: ${{ secrets.AMBROS_PORTAL_ANDROID_STORE_PASSWORD_PROD }}
          AMBROS_PORTAL_ANDROID_KEY_PASSWORD_PROD: ${{ secrets.AMBROS_PORTAL_ANDROID_KEY_PASSWORD_PROD }}

        with:
          lane: prod
          subdirectory: ../../../ambros_mobile/android




